version: '3.8'

services:
  adic-testnet:
    build:
      context: https://github.com/IguanAI/adic-core.git#main
      dockerfile: Dockerfile
    container_name: adic-testnet-validator
    ports:
      - "${API_PORT:-8080}:8080"      # API port
      - "${P2P_PORT:-9000}:9000"      # P2P TCP port
      - "${QUIC_PORT:-9001}:9001/udp" # QUIC UDP port
    volumes:
      - adic-testnet-data:/data
      - ./testnet-config.toml:/config/adic-config.toml:ro
      - ./genesis.json:/data/data/testnet/genesis.json:ro
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - NODE_NAME=${NODE_NAME:-testnet-validator}
      - AUTO_UPDATE=true
      - DNS_SEEDS=_seeds.adicl1.com
    command: [
      "adic",
      "--config", "/config/adic-config.toml",
      "start"
    ]
    restart: unless-stopped
    networks:
      - adic-testnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Local monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: adic-testnet-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - adic-testnet
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: adic-testnet-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - adic-testnet
    profiles:
      - monitoring

networks:
  adic-testnet:
    driver: bridge

volumes:
  adic-testnet-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local