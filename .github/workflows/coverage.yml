name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Cinstrument-coverage
  LLVM_PROFILE_FILE: coverage-%p-%m.profraw

jobs:
  coverage:
    name: Generate Code Coverage
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: llvm-tools-preview

    - name: Install grcov
      run: cargo install grcov

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libclang-dev

    - name: Clean previous coverage data
      run: |
        find . -name "*.profraw" -delete
        rm -rf target/coverage

    - name: Run tests with coverage
      env:
        RUSTFLAGS: -Cinstrument-coverage
        LLVM_PROFILE_FILE: coverage-%p-%m.profraw
      run: |
        cargo test --all-features --no-fail-fast

    - name: Generate coverage report
      run: |
        grcov . \
          --binary-path ./target/debug/ \
          --source-dir . \
          --output-type html \
          --branch \
          --ignore-not-existing \
          --ignore "/*" \
          --ignore "target/*" \
          --ignore "*/tests/*" \
          --ignore "*/benches/*" \
          --excl-start "GRCOV_EXCL_START|mod tests \{" \
          --excl-stop "GRCOV_EXCL_STOP" \
          --output-path ./target/coverage/html

    - name: Generate coverage summary (lcov)
      run: |
        grcov . \
          --binary-path ./target/debug/ \
          --source-dir . \
          --output-type lcov \
          --branch \
          --ignore-not-existing \
          --ignore "/*" \
          --ignore "target/*" \
          --ignore "*/tests/*" \
          --ignore "*/benches/*" \
          --excl-start "GRCOV_EXCL_START|mod tests \{" \
          --excl-stop "GRCOV_EXCL_STOP" \
          --output-path ./target/coverage/lcov.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./target/coverage/lcov.info
        fail_ci_if_error: false
        verbose: true

    - name: Archive coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: target/coverage/
        retention-days: 30

    - name: Display coverage summary
      run: |
        echo "## Coverage Report Generated" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Coverage reports have been generated in \`target/coverage/\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- HTML Report: \`target/coverage/html/index.html\`" >> $GITHUB_STEP_SUMMARY
        echo "- LCOV Report: \`target/coverage/lcov.info\`" >> $GITHUB_STEP_SUMMARY
